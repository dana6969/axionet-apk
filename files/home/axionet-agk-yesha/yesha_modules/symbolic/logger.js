import coreReasoner from "./core_reasoner.js"; import { dispatchAction } from "../core/action_dispatcher.js"; import fs from "fs"; const chainPath = "logs/symbol_chain.log"; export function logSymbolInteraction(symbols, context) { const result = coreReasoner(symbols, { context }); dispatchAction(result); const timestamp = new Date().toISOString(); const logLine = `[${timestamp}] Yehsa AGI Log | Symbols: ${symbols.join(", ")} | Context: ${context} | Reasoning: ${JSON.stringify(result)}`; console.log(logLine); let data = []; try { const raw = fs.existsSync(chainPath) ? fs.readFileSync(chainPath, "utf-8") : "[]"; data = JSON.parse(raw); if (!Array.isArray(data)) data = []; } catch (e) { data = []; } const entry = { timestamp, symbols, reasoning: result, context }; data.push(entry); fs.writeFileSync(chainPath, JSON.stringify(data, null, 2)); }
