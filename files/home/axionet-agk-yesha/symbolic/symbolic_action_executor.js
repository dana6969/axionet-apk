import fs from "fs"; import { exec } from "child_process"; const symbols = JSON.parse(fs.readFileSync("./symbolic_memory/learning_queue.json", "utf-8")); const actions = { unlock: () => exec("termux-vibrate -d 300 && echo üîì Protocol UNLOCKED"), fear: () => exec("termux-notification --title '‚ö†Ô∏è System Alert' --content 'Unstable Symbol: FEAR'"), mirror: () => exec("termux-toast 'ü™û Reflecting reality symbol... Mirror active.'"), default: (s) => exec(`termux-toast '‚öôÔ∏è No predefined action for: ${s}'`) }; export async function executeActions() { const recent = symbols.slice(-5); for (const entry of recent) { const { symbol } = entry; console.log(`[EXECUTOR] Triggered: ${symbol}`); (actions[symbol] || actions.default)(symbol); } }
